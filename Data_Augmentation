import os
import cv2
import albumentations as A
from tqdm import tqdm

# Function to perform data augmentation on image files using Albumentations
def augment_images(input_dir, output_dir, num_augmentations_per_image):
    # Ensure output directory exists
    if not os.path.exists(output_dir):
        os.makedirs(output_dir)

    # Define augmentation pipeline
    transform = A.Compose([
        A.HorizontalFlip(p=0.5),
        A.VerticalFlip(p=0.5),
        A.Rotate(limit=30, p=0.5),
        A.RandomBrightnessContrast(p=0.5),
        # Add more augmentation techniques as needed
    ])

    # Iterate through each image file in the input directory
    for filename in tqdm(os.listdir(input_dir)):
        if filename.endswith(".jpg") or filename.endswith(".png"):
            image_path = os.path.join(input_dir, filename)
            img = cv2.imread(image_path)
            img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)

            # Apply transformations and save augmented images
            for i in range(num_augmentations_per_image):
                augmented = transform(image=img)
                augmented_img = augmented["image"]

                # Save augmented image
                augmented_filename = f"{os.path.splitext(filename)[0]}_aug_{i+1}.jpg"
                augmented_path = os.path.join(output_dir, augmented_filename)
                cv2.imwrite(augmented_path, augmented_img)


input_directory =""
output_directory = ""
num_augmentations = 2  # Maximum number of augmentations per image
augment_images(input_directory, output_directory, num_augmentations)
